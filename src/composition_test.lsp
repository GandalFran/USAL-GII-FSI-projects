(load "is_atom.lsp")
(load "composition.lsp")


(format t "~%INFO:composition_test.lsp: TESTS OF composition")
; test nil,nil -> nil
(setf test_composition_var_1 NIL )
(setf test_composition_var_2 NIL )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: NIL)" test_composition_var_1 test_composition_var_2 test_composition_var_result)
; test const,nil -> a
(setf test_composition_var_1 '(x y))
(setf test_composition_var_2 NIL )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: A)" test_composition_var_1 test_composition_var_2 test_composition_var_result)
; test nil,const -> a
(setf test_composition_var_1 NIL )
(setf test_composition_var_2 'b )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: B)" test_composition_var_1 test_composition_var_2 test_composition_var_result)
; test const,const -> (a, b)
(setf test_composition_var_1 'a )
(setf test_composition_var_2 'b )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: (A B))" test_composition_var_1 test_composition_var_2 test_composition_var_result)
; test const,const -> a
(setf test_composition_var_1 'a )
(setf test_composition_var_2 'a )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: A)" test_composition_var_1 test_composition_var_2 test_composition_var_result)
; test var,nil -> var
(setf test_composition_var_1 '(? a) )
(setf test_composition_var_2 NIL )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: ((? A) B))" test_composition_var_1 test_composition_var_2 test_composition_var_result)
; test nil,var -> var
(setf test_composition_var_1 NIL )
(setf test_composition_var_2 '(? a) )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: ((? A) B))" test_composition_var_1 test_composition_var_2 test_composition_var_result)
; test var,const -> (var const)
(setf test_composition_var_1 '(? a) )
(setf test_composition_var_2 'b )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: ((? A) B))" test_composition_var_1 test_composition_var_2 test_composition_var_result)
; test const,var -> (const, var)
(setf test_composition_var_1 'a )
(setf test_composition_var_2 '(? b) )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: (A (? B)))" test_composition_var_1 test_composition_var_2 test_composition_var_result)
; test var,var -> (var, var)
(setf test_composition_var_1 '(? a) )
(setf test_composition_var_2 '(? b) )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: ((? A) (? B)))" test_composition_var_1 test_composition_var_2 test_composition_var_result)
; test var,var -> var
(setf test_composition_var_1 '(? a) )
(setf test_composition_var_2 '(? a) )
(setf test_composition_var_result (composition test_composition_var_1 test_composition_var_2) )
(format t "~%INFO:composition_test.lsp: (composition ~S ~S): ~S (expected: (? A))" test_composition_var_1 test_composition_var_2 test_composition_var_result)